package com.yuqun.main.wxapi;import android.app.Activity;import android.content.Intent;import android.os.Bundle;import android.os.Message;import android.util.Log;import android.widget.Toast;import com.tencent.mm.sdk.modelbase.BaseReq;import com.tencent.mm.sdk.modelbase.BaseResp;import com.tencent.mm.sdk.modelmsg.SendAuth;import com.tencent.mm.sdk.openapi.IWXAPI;import com.tencent.mm.sdk.openapi.IWXAPIEventHandler;import com.tencent.mm.sdk.openapi.WXAPIFactory;import com.yuqun.main.R;import com.yuqun.main.app.YuQunApplication;import com.yuqun.main.comm.CommonData;import com.yuqun.main.manager.SharePreferenceManager;import com.yuqun.main.net.HttpRequestUtil;import com.yuqun.main.net.request.IRequestAction;import com.yuqun.main.ui.model.UserModle;import com.yuqun.main.utils.JsonUtil;import org.apache.http.HttpResponse;import org.apache.http.client.ClientProtocolException;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.DefaultHttpClient;import org.apache.http.util.EntityUtils;import org.json.JSONException;import org.json.JSONObject;import java.io.IOException;import java.util.HashMap;import java.util.List;import java.util.Map;public class WXEntryActivity extends Activity implements IWXAPIEventHandler {    private static final int TIMELINE_SUPPORTED_VERSION = 0x21020001;    private IWXAPI api;    private String openId;    private String code;    private String access_token;    private android.os.Handler handler_login = new android.os.Handler() {        public void handleMessage(Message msg) {            switch (msg.what) {                case CommonData.HTTP_HANDLE_FAILE:                    if (null != msg.obj) {                        Toast.makeText(WXEntryActivity.this, msg.obj.toString(), Toast.LENGTH_SHORT).show();                    }                    break;                case CommonData.HTTP_HANDLE_SUCCESS:                    //TODO 重新登陆成功：将微信id和头像存到本地；发广播给提现界面，进行提现刷新；                    String json = msg.obj.toString();                    List<UserModle> list = JsonUtil.parseFromJsonToList(json, UserModle.class);                    UserModle userModle = list.get(0);                    SharePreferenceManager.getInstance().setString(CommonData.WX_ID, userModle.getWeiXinID());                    SharePreferenceManager.getInstance().setString(CommonData.WX_HEADER, userModle.getUserHeadPic());                    //此处要存UnionId;//                    SharePreferenceManager.getInstance().getString(CommonData.UNION_ID)                    Intent intent = new Intent();                    intent.setAction(CommonData.WXMessage);                    sendBroadcast(intent);                    break;            }        }    };    private android.os.Handler handler = new android.os.Handler() {        public void handleMessage(Message msg) {            switch (msg.what) {                case CommonData.HTTP_HANDLE_FAILE:                    break;                case CommonData.HTTP_HANDLE_SUCCESS:                    new Thread(new Runnable() {                        @Override                        public void run() {                            String user_url = "https://api.weixin.qq.com/sns/userinfo?access_token=" + access_token + "&openid=" + openId + "";                            getUserInof(user_url);                        }                    }).start();                    break;            }        }    };    private android.os.Handler handler_updateWX = new android.os.Handler() {        public void handleMessage(Message msg) {            switch (msg.what) {                case CommonData.HTTP_HANDLE_FAILE:                    if (null != msg.obj) {                        Toast.makeText(WXEntryActivity.this, msg.obj.toString(), Toast.LENGTH_SHORT).show();                    }                    break;                case CommonData.HTTP_HANDLE_SUCCESS:                    String json = msg.obj.toString();                    try {                        JSONObject jsonObject = new JSONObject(json);                        String RC = jsonObject.getString("RC");                        if (RC.equals("1")) {                            //绑定成功  重新登录                            HashMap<String, String> map = new HashMap<>();                            map.put("tel", tel);                            map.put("pwd", psw);                            HttpRequestUtil.sendHttpPostCommonRequest(IRequestAction.request_login, map, handler_login);                        }                    } catch (JSONException e) {                        e.printStackTrace();                    }                    break;            }        }    };    private String oid;    private String headimgurl;    private String tel, uid, psw;    private String unionid;    @Override    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.layout_wx);        handleIntent(getIntent());        api = WXAPIFactory.createWXAPI(this, WeChatConstants.APP_ID, true);        api.registerApp(WeChatConstants.APP_ID);        tel = SharePreferenceManager.getInstance().getString(CommonData.USER_PHONE, "");        uid = SharePreferenceManager.getInstance().getString(CommonData.USER_ID, "");        psw = SharePreferenceManager.getInstance().getString(CommonData.USER_PWD, "");    }    private void handleIntent(Intent paramIntent) {        YuQunApplication.api.handleIntent(paramIntent, this);    }    @Override    protected void onNewIntent(Intent intent) {        super.onNewIntent(intent);        setIntent(intent);        YuQunApplication.api.handleIntent(intent, this);    }    @Override    public void onReq(BaseReq baseReq) {    }    @Override    public void onResp(BaseResp baseResp) {        finish();        switch (baseResp.errCode) {            case BaseResp.ErrCode.ERR_OK:                //登陆                if (!CommonData.isShare) {                    openId = ((SendAuth.Resp) baseResp).openId;                    code = ((SendAuth.Resp) baseResp).code;//                    Toast.makeText(WXEntryActivity.this, "code="+code, Toast.LENGTH_LONG).show();                    HashMap<String, String> map = new HashMap<>();                    map.put("tel", tel);                    map.put("uid", SharePreferenceManager.getInstance().getString(CommonData.USER_ID, ""));                    map.put("code", code);                    HttpRequestUtil.sendHttpPostCommonRequest(IRequestAction.getAccessToken, map, handler);//                    new Thread(new Runnable() {//                        @Override//                        public void run() {//                            String token_url = "https://api.weixin.qq.com/sns/oauth2/access_token?appid=" + WeChatConstants.APP_ID + "&secret=" + WeChatConstants.SECRET + "&code=" + code + "&grant_type=authorization_code";//                            System.out.println("token_url:" + token_url);//                            sendRequestGet(token_url);//                        }//                    }).start();                } else {                    //分享                    Toast.makeText(WXEntryActivity.this, "分享成功", Toast.LENGTH_SHORT).show();                }                break;            case BaseResp.ErrCode.ERR_USER_CANCEL:                //分享取消//                Toast.makeText(WXEntryActivity.this, "分享取消", Toast.LENGTH_SHORT).show();                break;            case BaseResp.ErrCode.ERR_AUTH_DENIED:                //分享拒绝//                Toast.makeText(WXEntryActivity.this, "分享拒绝", Toast.LENGTH_SHORT).show();                break;        }    }    private void sendRequestGet(String url) {        // 第一步，创建HttpGet对象        HttpGet httpGet = new HttpGet(url);        // 第二步，使用execute方法发送HTTP GET请求，并返回HttpResponse对象        HttpResponse httpResponse;        try {            httpResponse = new DefaultHttpClient().execute(httpGet);            if (httpResponse.getStatusLine().getStatusCode() == 200) {                // 第三步，使用getEntity方法活得返回结果                String result = EntityUtils.toString(httpResponse.getEntity());//                System.out.print("token_url:" + result);//                Toast.makeText(WXEntryActivity.this, ""+result, Toast.LENGTH_SHORT).show();                JSONObject jsonObject = new JSONObject(result);                access_token = (String) jsonObject.get("access_token");//                System.out.println("token_url:" + access_token);                handler.sendEmptyMessage(CommonData.HTTP_HANDLE_SUCCESS);            }        } catch (ClientProtocolException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        } catch (JSONException e) {            e.printStackTrace();        }    }    private void getUserInof(String url) {        // 第一步，创建HttpGet对象        HttpGet httpGet = new HttpGet(url);        // 第二步，使用execute方法发送HTTP GET请求，并返回HttpResponse对象        HttpResponse httpResponse;        try {            httpResponse = new DefaultHttpClient().execute(httpGet);//            System.out.print("token_url:" + httpResponse.getStatusLine().getStatusCode());            if (httpResponse.getStatusLine().getStatusCode() == 200) {                // 第三步，使用getEntity方法活得返回结果                String result = EntityUtils.toString(httpResponse.getEntity());//                System.out.println("token_url:" + result);//                Toast.makeText(WXEntryActivity.this, ""+result, Toast.LENGTH_SHORT).show();                JSONObject jsonObject = new JSONObject(result);                headimgurl = (String) jsonObject.get("headimgurl");//                System.out.println("token_url:" + headimgurl);                unionid = (String) jsonObject.get("unionid");                oid = (String) jsonObject.get("openid");//                System.out.println("oid:" + oid);                SharePreferenceManager.getInstance().getString(CommonData.WX_HEADER, headimgurl);                SharePreferenceManager.getInstance().getString(CommonData.WX_ID, oid);                SharePreferenceManager.getInstance().getString(CommonData.UNION_ID, unionid);                updateWXId();            }        } catch (ClientProtocolException e) {            e.printStackTrace();        } catch (IOException e) {            e.printStackTrace();        } catch (JSONException e) {            e.printStackTrace();        }    }    private void updateWXId() {        Map<String, String> paramsMap = new HashMap<>();        paramsMap.put("wxid", unionid);//        Toast.makeText(WXEntryActivity.this, "oid="+oid, Toast.LENGTH_SHORT).show();        paramsMap.put("userheadpic", headimgurl);        paramsMap.put("uid", uid);        paramsMap.put("tel", tel);        HttpRequestUtil.sendHttpPostCommonRequest(IRequestAction.updateWeiXinID, paramsMap,                handler_updateWX);    }}